{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EMRE CAN\\\\fsweb-s11g3-crud-filmler\\\\src\\\\components\\\\FavoriteMovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteMovieList = props => {\n  _s();\n  const [favoriteMovies, setFavoriteMovies] = useState([]);\n  const addToFavorites = movie => {\n    const isAlreadyFavorite = favoriteMovies.some(favMovie => favMovie.id === movie.id);\n    if (isAlreadyFavorite) {\n      console.log(\"Film zaten favorilere eklendi!\");\n      return;\n    }\n    setFavoriteMovies(prevFavorites => [...prevFavorites, movie]);\n  };\n  const updateFavoriteMovie = (movieId, NewTitle) => {\n    const updateFavorites = favoriteMovies.map(movie => {\n      if (movie.id === movieId) {\n        return {\n          ...movie,\n          title: NewTitle\n        };\n      }\n      return movie;\n    });\n    setFavoriteMovies(updateFavorites);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 sm:max-w-[250px] p-5 pr-5 bg-white shadow rounded-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"font-bold\",\n      children: \"Favori Filmler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-3 text-sm\",\n      children: favoriteMovies.map(movie => /*#__PURE__*/_jsxDEV(Link, {\n        className: \"py-1 flex gap-2 justify-between\",\n        to: `/movies/${movie.id}`,\n        children: movie.title\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoriteMovieList, \"OR/wwWYhGMdE/evwgOPZa9OvGS4=\");\n_c = FavoriteMovieList;\nexport default FavoriteMovieList;\nvar _c;\n$RefreshReg$(_c, \"FavoriteMovieList\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","FavoriteMovieList","props","_s","favoriteMovies","setFavoriteMovies","addToFavorites","movie","isAlreadyFavorite","some","favMovie","id","console","log","prevFavorites","updateFavoriteMovie","movieId","NewTitle","updateFavorites","map","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/EMRE CAN/fsweb-s11g3-crud-filmler/src/components/FavoriteMovieList.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FavoriteMovieList = (props) => {\r\n  const [favoriteMovies, setFavoriteMovies] = useState([]);\r\n  \r\n  const addToFavorites = (movie) => {\r\n    const isAlreadyFavorite = favoriteMovies.some((favMovie)=> favMovie.id === movie.id)\r\n    if(isAlreadyFavorite) {\r\n      console.log(\"Film zaten favorilere eklendi!\");\r\n      return; \r\n    }\r\n    setFavoriteMovies(prevFavorites => [...prevFavorites, movie]);\r\n  };\r\n  const updateFavoriteMovie = (movieId,NewTitle)=>{\r\n    const updateFavorites = favoriteMovies.map((movie)=>{\r\n      if(movie.id===movieId) {\r\n        return {...movie,title:NewTitle};\r\n      }\r\n      return movie;\r\n    });\r\n    setFavoriteMovies(updateFavorites);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-1 sm:max-w-[250px] p-5 pr-5 bg-white shadow rounded-md\">\r\n      <h5 className=\"font-bold\">Favori Filmler</h5>\r\n      <div className=\"pt-3 text-sm\">\r\n        {favoriteMovies.map((movie) => (\r\n          <Link\r\n            key={movie.id}\r\n            className=\"py-1 flex gap-2 justify-between\"\r\n            to={`/movies/${movie.id}`}\r\n          >\r\n            {movie.title}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteMovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMS,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,iBAAiB,GAAGJ,cAAc,CAACK,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKJ,KAAK,CAACI,EAAE,CAAC;IACpF,IAAGH,iBAAiB,EAAE;MACpBI,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C;IACF;IACAR,iBAAiB,CAACS,aAAa,IAAI,CAAC,GAAGA,aAAa,EAAEP,KAAK,CAAC,CAAC;EAC/D,CAAC;EACD,MAAMQ,mBAAmB,GAAGA,CAACC,OAAO,EAACC,QAAQ,KAAG;IAC9C,MAAMC,eAAe,GAAGd,cAAc,CAACe,GAAG,CAAEZ,KAAK,IAAG;MAClD,IAAGA,KAAK,CAACI,EAAE,KAAGK,OAAO,EAAE;QACrB,OAAO;UAAC,GAAGT,KAAK;UAACa,KAAK,EAACH;QAAQ,CAAC;MAClC;MACA,OAAOV,KAAK;IACd,CAAC,CAAC;IACFF,iBAAiB,CAACa,eAAe,CAAC;EACpC,CAAC;EAED,oBACElB,OAAA;IAAKqB,SAAS,EAAC,6DAA6D;IAAAC,QAAA,gBAC1EtB,OAAA;MAAIqB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7C1B,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BlB,cAAc,CAACe,GAAG,CAAEZ,KAAK,iBACxBP,OAAA,CAACF,IAAI;QAEHuB,SAAS,EAAC,iCAAiC;QAC3CM,EAAE,EAAG,WAAUpB,KAAK,CAACI,EAAG,EAAE;QAAAW,QAAA,EAEzBf,KAAK,CAACa;MAAK,GAJPb,KAAK,CAACI,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CArCIF,iBAAiB;AAAA2B,EAAA,GAAjB3B,iBAAiB;AAuCvB,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}